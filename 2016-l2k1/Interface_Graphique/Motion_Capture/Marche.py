import bpy
from selection import *

translate = bpy.ops.transform.translate 
rotate = bpy.ops.transform.rotate



rBrasG = [-0.302135, 0.0653427, 0.270438, 0.332594, 0.219679, -0.268341, -0.289492, -0.256629, -0.118303, 0.111986, 0.279223, 0.297228, 0.13665, -0.153994, -0.284801, -0.208142, -0.17034]
xBrasG = [-1, -0.999114, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
yBrasG = [-2.22045e-016, 0.00279368, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016]
zBrasG = [-4.93038e-032, -0.0419866, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032]





rBrasD = [-0.312529, 0.0374017, 0.244254, 0.201404, 0.271219, -0.228142, -0.2729, -0.216416, -0.116278, 0.117645, 0.231853, 0.315543, 0.117074, -0.179293, -0.228615, -0.227983, -0.202696]
xBrasD = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
yBrasD = [-2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016]
zBrasD = [-4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032]





xJambeG = [5.0274e-018, 8.6184e-019, -0.000181189, 7.9002e-018, 1.58004e-017, -4.7212e-018, 1.33767e-017, -1.24587e-017, -1.37702e-017, -3.93433e-018, -1.57373e-018, 6.55722e-018, 1.96717e-018, 2.62289e-018, 1.1803e-017, -3.27861e-018, -1.11473e-017]
yJambeG = [-0.274931, 0.201832, 0.0161714, 0.249055, 0.148786, -0.092137, -0.166555, -0.307123, -0.0502029, 0.0885933, 0.134662, 0.245108, 0.0620153, -0.0354373, -0.186046, -0.236249, -0.0502029]
zJambeG = [0.00646897, 0.00388138, -0.0129379, 0.0355793, 0.0711587, -0.0212624, 0.0602434, -0.0561091, -0.0620153, -0.0177187, -0.00708746, 0.0295311, 0.00885933, 0.0118124, 0.053156, -0.0147656, -0.0502029]




xJambeD = [6.9345e-018, 1.7955e-018, 0.00210179, 7.182e-019, 7.182e-019, -1.63165e-017, -8.65553e-018, 5.9015e-018, 5.24578e-018, 1.1803e-017, 3.93433e-018, -9.83583e-018, -5.24578e-018, -8.52439e-018, -1.96717e-018, 9.18011e-018, 1.31144e-018]
yJambeD = [0.253312, -0.0512127, -0.187588, -0.268462, -0.0938001, 0.110224, 0.205536, 0.227389, 0.0708746, 0.102768, -0.311848, -0.292358, -0.053156, 0.0383904, 0.21853, 0.230343, 0.0826871]
zJambeD = [0.0312302, 0.00808621, 0.0646897, 0.00323449, 0.00323449, -0.0734828, -0.0389811, 0.026578, 0.0236249, 0.053156, 0.0177187, -0.0442967, -0.0236249, -0.0383904, -0.00885933, 0.0413435, 0.00590622]





rPiedG = [0.409691, -0.421875, -0.00878086, -0.348846, -0.0707021, -1.10492, 0.216166, 1.02245, 0.527844, -0.300449, 0.0839815, -0.274461, -0.125477, -0.421125, -0.621379, 1.18195, 0.396541]
xPiedG = [-1, -1, -0.999937, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
yPiedG = [-2.22045e-016, -2.22045e-016, -0.0112036, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016]
zPiedG = [-4.93038e-032, -4.93038e-032, -6.02658e-008, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032]





rPiedD = [-0.531501, -0.712556, -0.329916, 1.28125, 0.632188, -0.334521, -0.0490369, -0.194392, -0.196111, -0.745664, -0.13457, 0.936568, 0.907547, -0.570971, -0.0360741, -0.325469, -0.045574]
xPiedD = [-1, -1, -0.999937, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
yPiedD = [-2.22045e-016, -2.22045e-016, -0.0112036, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016, -2.22045e-016]
zPiedD = [-4.93038e-032, -4.93038e-032, -6.02658e-008, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032, -4.93038e-032]





xHanche =[-5.79658e-018, 4.788e-018, -4.78417e-034, 3.591e-018, 2.1546e-018, 4.7212e-018, 3.14747e-018, 2.62289e-018, -5.9015e-018, -1.57373e-018, 4.7212e-018, 1.31144e-018, -2.62289e-018, -3.27861e-018, 5.9015e-018, 1.31144e-018, -3.93433e-018]
yHanche =[-0.0200811, 0.0026954, -0.00970346, 0.0161724, -4.78417e-034, -0.00354373, 0.0141749, -0.0206718, 0.00295311, 0.00354373, 0.00708746, 2.91199e-034, 0.00295311, -7.27998e-034, 1.3104e-033, 2.91199e-034, -8.73597e-034]
zHanche =[-0.0261055, 0.0215632, -2.1546e-018, 0.0161724, -0.00970346, -0.0212624, 0.0141749, 0.0118124, -0.026578, -0.00708746, 0.0212624, 0.00590622, -0.0118124, -0.0147656, 0.026578, 0.00590622, -0.0177187]






start=0
end=17
bpy.context.scene.frame_start = start
bpy.context.scene.frame_end = end
bpy.context.scene.frame_current = 0




#POSITION DE DEPART 

#Cache l'os Root 
selec('Root')
bpy.ops.pose.hide(unselected=False)

#Cache l'os Pole Target.L
selec('Pole Target.L')
bpy.ops.pose.hide(unselected=False)

#Cache l'os Pole Target.R
selec('Pole Target.R')
bpy.ops.pose.hide(unselected=False)




# met le bras droit en position de départ
selec('Upper Arm.R')
rotate(value=-1.32833, axis=(-6.61745e-024, 1, 1.49012e-007))


selec('Lower Arm.R')
rotate(value=-0.0326565, axis=(0, 1, 1.34359e-007))




# met le bras gauche en position de départ
selec('Upper Arm.L')

rotate(value=1.35353, axis=(-6.61745e-024, 1, 1.49012e-007))




selec('Lower Arm.L')
rotate(value=0.0561365, axis=(0, 1, 1.34359e-007))







#ANIMATION





#boucle d'animation
for i in range(end):
    bpy.context.scene.frame_current = i
    #selectionne le bras gauche
    selec('Upper Arm.L')
    rotate(value=rBrasG[i], axis=(xBrasG[i], yBrasG[i], zBrasG[i]))
    bpy.ops.anim.keyframe_insert_menu(type='Rotation')
    #selectionne le bras droit
    selec('Upper Arm.R')
    rotate(value=rBrasD[i], axis=(xBrasD[i], yBrasD[i], zBrasD[i]))
    bpy.ops.anim.keyframe_insert_menu(type='Rotation')
    # selectionne la jambe gauche
    selec('Leg IK.L')
    translate(value=(xJambeG[i], yJambeG[i], zJambeG[i]))
    bpy.ops.anim.keyframe_insert_menu(type='Location')
    # selectionne la jambe droite
    selec('Leg IK.R')
    translate(value=(xJambeD[i], yJambeD[i], zJambeD[i]))
    bpy.ops.anim.keyframe_insert_menu(type='Location')
    # selectione le pied gauche
    selec('Foot.L')
    rotate(value=rPiedG[i], axis=(xPiedG[i], yPiedG[i], zPiedG[i]))
    bpy.ops.anim.keyframe_insert_menu(type='Rotation')
    # selectionne le pied droit
    selec('Foot.R')
    rotate(value=rPiedD[i], axis=(xPiedD[i], yPiedD[i], zPiedD[i]))
    bpy.ops.anim.keyframe_insert_menu(type='Rotation')
    #selectionne les hanches
    selec('Hip')
    translate(value=(xHanche[i], yHanche[i], zHanche[i]))
    bpy.ops.anim.keyframe_insert_menu(type='Location')
    
    


    

